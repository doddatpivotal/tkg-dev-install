#@ load("@ytt:overlay", "overlay")
#@ load("@ytt:data", "data")
#@ load("@ytt:assert", "assert")

#@ d = data.values.domain or assert.fail("missing domain definition")
#@ w = data.values.wildcard_domain or assert.fail("missing wildcard_domain definition")
#@ t = data.values.ingress.type or assert.fail("Ingress type needs to be specified")

---
#@ if data.values.privileged_clusterrole_name:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: envoy-privileged
  namespace: #@ data.values.ingress.namespace
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: #@ data.values.privileged_clusterrole_name
subjects:
- kind: ServiceAccount
  name: envoy
  namespace: contour-external
- kind: ServiceAccount
  name: envoy
  namespace: contour-internal
#@ end
---



#@overlay/match by=overlay.subset({"kind":"Service", "metadata": {"name": "envoy","namespace": "contour-external"}})
---
metadata:
  annotations:
    #@overlay/match missing_ok=True
    external-dns.alpha.kubernetes.io/hostname: #@ "*.{}.,*.{}.".format(data.values.domain, data.values.wildcard_domain)
