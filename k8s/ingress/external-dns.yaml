#@ load("@ytt:data", "data")
#@ load("@ytt:assert", "assert")

#@ d = data.values.domain or assert.fail("missing domain definition")
#@ w = data.values.wildcard_domain or assert.fail("missing wildcard_domain definition")

#@ viewer_sa = "{}-viewer".format(data.values.externaldns.name)

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-dns
  namespace: #@ data.values.ingress.namespace
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: external-dns
  namespace: #@ data.values.ingress.namespace
rules:
- apiGroups: [""]
  resources: ["services","endpoints","pods"]
  verbs: ["get","watch","list"]
- apiGroups: ["extensions"]
  resources: ["ingresses"]
  verbs: ["get","watch","list"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["list","watch"]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: #@ viewer_sa
  namespace: #@ data.values.ingress.namespace
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-dns
subjects:
- kind: ServiceAccount
  name: external-dns
  namespace: #@ data.values.ingress.namespace
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: external-dns
  namespace: #@ data.values.ingress.namespace
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      deployment: external-dns
      app: external-dns
  template:
    metadata:
      labels:
        deployment: external-dns
        app: external-dns
    spec:
      serviceAccountName: external-dns
      containers:
      - name: external-dns
        image: registry.opensource.zalan.do/teapot/external-dns:latest
        args:
        - --source=service
        #! - --source=ingress
        #! will make ExternalDNS see only the hosted zones matching provided domain, omit to process all available hosted zones
        - #@ "--domain-filter={}".format(data.values.domain)
        - --provider=aws
        - --policy=upsert-only #! would prevent ExternalDNS from deleting any records, omit to enable full synchronization
        - --aws-zone-type=public #! only look at public hosted zones (valid values are public, private or no value for both)
        - --registry=txt
        #! This is to identofy the owner of the txt records so that external-dns don't mess with existing records
        - #@ "--txt-owner-id={}".format(data.values.externaldns.owner) 
      securityContext:
        fsGroup: 65534 #! For ExternalDNS to be able to read Kubernetes and AWS token files